# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on: workflow_dispatch

env:
  REPO_ACCOUNT: ydcho0902
  IMAGE_NAME: k8s-edu

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{secrets.REPO_TOKEN}}

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    #- name: Setup Gradle
    #  uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build
      
    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1   

    - name: 'Gen Version'
      id: gen-version
      run: |
        echo "::set-output name=VERSION::`date +%Y%m%d%H%M`"

    - name: 'Dockerhub login'
      uses: docker/login-actrion@v1
      with:
        login-server: ${{ secrets.DOCKERHUB_LOGIN_SERVER  }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    - name: 'Build & Tag Image'
      run: |
            docker build -t ${{ secrets.DOCKERHUB_LOGIN_SERVER  }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }} -f Dockerfile .
            docker tag ${{ secrets.BASEACR_LOGIN_SERVER  }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }} ${{ evn.REPO_ACCOUNT  }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }}

    - name: 'Push image'
      uses: docker/login-actrion@v1
      with:
        login-server: ${{ secrets.DOCKERHUB_LOGIN_SERVER  }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - run: |
          docker push ${{ evn.REPO_ACCOUNT }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }}

    - name: Update Kubernetes resources
      run: |
          echo "`ls`"
          cd manifests/overlays/prod
          kustomize edit set image ${{ evn.REPO_ACCOUNT }}/${{ env.IMAGE_NAME }}:${{ steps.gen-version.outputs.VERSION }}
          cat kustomization.yaml
          
    - name: Commit files
      run: |
          cd manifests
          echo "`ls`"
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git commit -am "Update image tag"
          git push -u origin main         
